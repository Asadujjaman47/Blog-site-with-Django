1. create My_Blog_Project:
   i.     here django version was: 3.0.2 installed!
	> django-admin startproject My_Blog_Project
and open VS

2. create virtual env and activate
in CMD:
        python -m venv env
        env\Scripts\activate

3.  
i.  then, install django: 3.2
        pip install django==3.2
ii.  and install pillow:
        pip install pillow

4.here we work with 2 app
Blog and Login:
        py manage.py startapp App_Login 
        py manage.py startapp App_Blog 

create folder: 
        templates
        media
        static
and link them in Setting.py
        i. Setting.py:
                INSTALLED_APPS = [
                        'django.contrib.admin',
                        'django.contrib.auth',
                        'django.contrib.contenttypes',
                        'django.contrib.sessions',
                        'django.contrib.messages',
                        'django.contrib.staticfiles',
                ->     'App_Blog',
                ->     'App_Login'
                ]

        ii. templates, static, media:

                # Build paths inside the project like this: BASE_DIR / 'subdir'.
                BASE_DIR = Path(__file__).resolve().parent.parent
                TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')
                STATIC_DIR = os.path.join(BASE_DIR, 'static')
                MEDIA_DIR = os.path.join(BASE_DIR, 'media')

        iii. TEMPLATES_DIR:
                TEMPLATES = [
                {
                        'BACKEND': 'django.template.backends.django.DjangoTemplates',
                ->      'DIRS': [TEMPLATES_DIR, ],
                        'APP_DIRS': True,
                        'OPTIONS': {
                                'context_processors': [
                                        'django.template.context_processors.debug',
                                        'django.template.context_processors.request',
                                        'django.contrib.auth.context_processors.auth',
                                        'django.contrib.messages.context_processors.messages',
                                ],
                        },
                        },
                ]

        iv. static and media:
                STATIC_URL = '/static/'
                STATIC_DIR = [STATIC_DIR, ]

                # MEDIA
                MEDIA_ROOT = MEDIA_DIR
                MEDIA_URL = '/media/'

V2:
5. create Model
App_Login/models.py:
        // here create UserProfile
        then run migration
                > py manage.py migrate
                > py manage.py makemigrations App_Login
                > py manage.py migrate

App_Blog/models.py:
        // create Blog model:

        // create Comment model:

        // create reaction: Likes model

        then make migration:
                > py manage.py migrate
                > py manage.py makemigrations App_Blog
                > py manage.py migrate


6. create superuser:
        >py manage.py createsuperuser

        Username (leave blank to use 'asadu'): admin
        Email address: asdujjaman255@gmail.com
        Password: 1234
        Password (again): 1234
        Bypass password validation and create user anyway? [y/N]: y
        Superuser created successfully.


        >py manage.py runserver
                // and go admin site:
                http://127.0.0.1:8000/admin
        
        // here we will not see any model,
        cz we didn;t register any model

7. register model:
 App_Blog/admin.py:
        from App_Blog.models import Blog, Comment, Likes

        # Register your models here.

        admin.site.register(Blog)
        admin.site.register(Comment)
        admin.site.register(Likes)

App_Login/admin.py:
        from App_Login.models import UserProfile

        # Register your models here.

        admin.site.register(UserProfile)  

Now we can see all models





V3:
8. main project urls.py:
->       from django.urls import path, include

        urlpatterns = [
                path('admin/', admin.site.urls),
->              path('account/', include('App_Login.urls')),
->              path('blog/', include('App_Blog.urls')),
                # path('',)
        ]

9. now create a view for project folder:
My_Blog_Project/views.py:

        from django.http import HttpResponse


        def Index(request):
        return HttpResponse("I am homepage")

10.
urls.py:

        from . import views

        urlpatterns = [
        path('admin/', admin.site.urls),
        path('account/', include('App_Login.urls')),
        path('blog/', include('App_Blog.urls')),
->      path('', views.Index, name='index'),
        ]

11: avoid error, create urls.py file in App_Blog and App_Login:
App_Login/urls.py:
        from django.urls import path

        urlpatterns = [

        ]

App_Blog/urls.py:
        from django.urls import path

        urlpatterns = [

        ]

now run server, and see weverthing is ok


12:
create folder in templates:
        App_Blog
        App_Login

and a base.html file
i.boilerplate:
        <!doctype html>
        <html lang="en">
        <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

        <!-- Bootstrap CSS -->
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">

        <title>{% block title_block %} Blogs {% endblock %}</title>
        </head>
        <body>



        <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
        </body>
        </html>

ii. add navigation:

    <nav class="navbar navbar-expand-sm navbar-dark bg-dark">
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav">
            <li class="nav-item active">
              <a class="nav-link" href="{% url 'index' %}">Home <span class="sr-only">(current)</span></a>
            </li>
            {% comment %} <li class="nav-item">
              <a class="nav-link" href="#">Features</a>
            </li> {% endcomment %}
          </ul>
        </div>
      </nav>


13. create template: template/App_Blog/blog_list.html

i. and in base.html:
    {% block body_block %}

    {% endblock %}

ii. blog_list.html:
        {% extends 'base.html' %}
        {% block title_block %} Home {% endblock %}
        {% block body_block %}
        <h1>I am blog homepage</h1>


        {% endblock %}

14.
App_Blog/view.py:
from django.shortcuts import render

# Create your views here.


def blog_list(request):
    return render(request, 'App_Blog/blog_list.html', context={})


15. App_Blog/urls.py:

from django.urls import path
# from . import views
from App_Blog import views

app_name = 'App_Blog'

urlpatterns = [
    path('', views.blog_list, name='blog_list'),
]


16. set the site home page:
        (when type site name only, it redirect in blog.html)
i.  viwes.py > Index:
                from django.http import HttpResponse
                from django.urls import reverse
                from django.shortcuts import HttpResponseRedirect


                def Index(request):
                return HttpResponseRedirect(reverse('App_Blog:blog_list'))

here rediction:
        main urls: '' 
                view > Index:      redirect:     App_Blog:blog_list
                        (App_Blog > urls > blog_list)
                                blog_list: App_Blog/blog_list.html


 


